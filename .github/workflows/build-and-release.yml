name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.

permissions:
  contents: write  # Needed to create releases and push to repository
  pages: write     # Needed to deploy to GitHub Pages
  id-token: write  # Needed for GitHub Pages deployment

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'pnpm'
        
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
      
    - name: Run type check
      run: pnpm run type-check
      
    # - name: Run linting
    #   run: pnpm run lint
      
    - name: Build application
      run: pnpm run build
      
    - name: Setup GitHub Pages
      uses: actions/configure-pages@v4
      
    - name: Upload GitHub Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist
        
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
      
    - name: Extract version from tag
      id: version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        release_name: Release ${{ steps.version.outputs.VERSION }}
        body: |
          ## 🚀 BibTeX Manager ${{ steps.version.outputs.VERSION }}
          
          ### 🌐 Live Demo
          
          **Try it now:** [GitHub Pages Demo](${{ steps.deployment.outputs.page_url }})
          
          ### 📦 Download and Use
          
          1. **Download**: Get the `index.html` file from this release
          2. **Copy**: Place it in the same directory as your `.bib` files
          3. **Open**: Double-click `index.html` to start managing your bibliography
          
          ### ✨ Features
          
          - 📁 **Single HTML File** - No installation required, runs anywhere
          - 🔍 **Advanced Filtering** - Real-time search by text, author, year range, type
          - ✏️ **Smart Edit Modes** - Form-based editing with validation + raw BibTeX editing
          - 🔗 **String Variables** - Full support for `@STRING` variables
          - 👥 **Author-Centric View** - Browse entries by author with statistics
          - 🤖 **Auto-Discovery** - Automatically finds and loads .bib files when served over HTTP
          - 💾 **Modern File Handling** - File System Access API with download fallback
          - 🎨 **Responsive Design** - Works seamlessly on desktop and mobile
          
          ### 📊 Technical Details
          
          - **Bundle Size:** Single 172KB HTML file (54KB gzipped)
          - **Technology:** React 18 + TypeScript + Vite
          - **Validation:** Real-time BibTeX validation with Valibot
          - **Performance:** Tested with 1000+ entry bibliographies
          
          ---
          
          **Made with ❤️ for researchers and academics**
        draft: false
        prerelease: false
        
    - name: Upload index.html to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./dist/index.html
        asset_name: index.html
        asset_content_type: text/html
        
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
    - name: Update index.html in repository root
      run: |
        # Copy the built file to repository root
        cp dist/index.html index.html
        
        # Check if there are changes to commit
        if git diff --quiet index.html; then
          echo "No changes to index.html, skipping commit"
        else
          git add index.html
          git commit -m "🚀 Release ${{ steps.version.outputs.VERSION }}: Update index.html from build"
          git push origin HEAD:main
        fi
